"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var legacy_exports = {};
__export(legacy_exports, {
  checkIsLegacyConfig: () => checkIsLegacyConfig,
  transformNormalizedConfig: () => transformNormalizedConfig
});
module.exports = __toCommonJS(legacy_exports);
var import_createHtmlConfig = require("./createHtmlConfig");
var import_createOutputConfig = require("./createOutputConfig");
var import_createSourceConfig = require("./createSourceConfig");
var import_createToolsConfig = require("./createToolsConfig");
function transformNormalizedConfig(config) {
  const html = (0, import_createHtmlConfig.createHtmlConfig)(config);
  const output = (0, import_createOutputConfig.createOutputConfig)(config);
  const source = (0, import_createSourceConfig.createSourceConfig)(config);
  const tools = (0, import_createToolsConfig.createToolsConfig)(config);
  const { bff, dev, deploy, runtime, runtimeByEntries, server, cliOptions, plugins, testing, autoLoadPlugins } = config;
  return {
    source,
    html,
    output,
    tools,
    bff,
    dev,
    deploy,
    runtime,
    runtimeByEntries,
    server,
    cliOptions,
    testing,
    devtools: {},
    builderPlugins: [],
    plugins,
    security: {},
    _raw: {},
    experiments: {},
    environments: {},
    autoLoadPlugins,
    performance: {
      removeMomentLocale: true
    }
  };
}
function checkIsLegacyConfig(config) {
  return Boolean(config.legacy);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  checkIsLegacyConfig,
  transformNormalizedConfig
});
