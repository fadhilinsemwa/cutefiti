"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var loadPlugins_exports = {};
__export(loadPlugins_exports, {
  getServerPlugins: () => getServerPlugins,
  loadServerPlugins: () => loadServerPlugins
});
module.exports = __toCommonJS(loadPlugins_exports);
var import_prod_server = require("@modern-js/prod-server");
async function getServerPlugins(api, metaName = "modern-js") {
  const runner = api.useHookRunners();
  const { plugins } = await runner._internalServerPlugins({
    plugins: []
  });
  const filtedPlugins = plugins.filter((plugin) => plugin.name.includes(metaName));
  api.setAppContext({
    ...api.useAppContext(),
    serverPlugins: filtedPlugins
  });
  return filtedPlugins;
}
async function loadServerPlugins(api, appDirectory, metaName) {
  const plugins = await getServerPlugins(api, metaName);
  const instances = await (0, import_prod_server.loadServerPlugins)(plugins, appDirectory);
  return instances;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getServerPlugins,
  loadServerPlugins
});
