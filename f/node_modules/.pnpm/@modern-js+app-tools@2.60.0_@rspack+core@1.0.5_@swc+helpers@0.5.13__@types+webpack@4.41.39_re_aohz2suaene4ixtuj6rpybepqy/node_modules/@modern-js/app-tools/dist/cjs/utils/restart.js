"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var restart_exports = {};
__export(restart_exports, {
  restart: () => restart
});
module.exports = __toCommonJS(restart_exports);
var import_core = require("@modern-js/core");
var import_utils = require("@modern-js/utils");
async function restart(hooksRunner, filename) {
  (0, import_utils.clearConsole)();
  import_utils.logger.info(`Restart because ${import_utils.chalk.yellow(filename)} is changed...
`);
  let hasGetError = false;
  await hooksRunner.beforeRestart();
  try {
    await import_core.cli.init(import_core.cli.getPrevInitOptions());
  } catch (err) {
    console.error(err);
    hasGetError = true;
  } finally {
    if (!hasGetError) {
      import_utils.program.parse((0, import_utils.getFullArgv)());
    }
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  restart
});
