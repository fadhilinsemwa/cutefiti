import { createUploadPattern } from "../builder-webpack/createCopyPattern";
function modifyOutputConfig(config, appContext) {
  const defaultCopyPattern = createUploadPattern(appContext, config);
  const { copy } = config.output;
  const copyOptions = Array.isArray(copy) ? copy : copy === null || copy === void 0 ? void 0 : copy.patterns;
  const builderCopy = [
    ...copyOptions || [],
    defaultCopyPattern
  ];
  config.output = {
    ...config.output,
    copy: builderCopy
  };
}
function createBuilderProviderConfig(resolveConfig, appContext) {
  const htmlConfig = {
    ...resolveConfig.html
  };
  if (!htmlConfig.template) {
    htmlConfig.templateByEntries = {
      ...appContext.htmlTemplates,
      ...htmlConfig.templateByEntries
    };
  }
  const config = {
    ...resolveConfig,
    plugins: [],
    dev: {
      ...resolveConfig.dev,
      port: appContext.port
    },
    html: htmlConfig,
    output: {
      ...resolveConfig.output,
      // We need to do this in the app-tools prepare hook because some files will be generated into the dist directory in the analyze process
      cleanDistPath: false
    }
  };
  modifyOutputConfig(config, appContext);
  return config;
}
export {
  createBuilderProviderConfig
};
