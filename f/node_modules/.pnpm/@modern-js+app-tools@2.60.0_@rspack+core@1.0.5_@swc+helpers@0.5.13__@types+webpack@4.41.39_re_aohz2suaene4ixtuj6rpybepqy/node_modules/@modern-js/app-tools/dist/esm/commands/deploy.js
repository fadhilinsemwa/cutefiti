import { _ as _async_to_generator } from "@swc/helpers/_/_async_to_generator";
import { _ as _ts_generator } from "@swc/helpers/_/_ts_generator";
import { getServerPlugins } from "../utils/loadPlugins";
var deploy = function() {
  var _ref = _async_to_generator(function(api, options) {
    var hookRunners, metaName;
    return _ts_generator(this, function(_state) {
      switch (_state.label) {
        case 0:
          hookRunners = api.useHookRunners();
          metaName = api.useAppContext().metaName;
          return [
            4,
            getServerPlugins(api, metaName)
          ];
        case 1:
          _state.sent();
          return [
            4,
            hookRunners.beforeDeploy(options)
          ];
        case 2:
          _state.sent();
          return [
            4,
            hookRunners.deploy(options)
          ];
        case 3:
          _state.sent();
          return [
            4,
            hookRunners.afterDeploy(options)
          ];
        case 4:
          _state.sent();
          return [
            2
          ];
      }
    });
  });
  return function deploy2(api, options) {
    return _ref.apply(this, arguments);
  };
}();
export {
  deploy
};
