import { _ as _define_property } from "@swc/helpers/_/_define_property";
import { MAIN_ENTRY_NAME } from "@modern-js/utils";
import { getAutoInjectEnv } from "../utils/env";
function createDefaultConfig(appContext) {
  var dev = {
    // `dev.port` should not have a default value
    // because we will use `server.port` by default
    port: void 0
  };
  var output = {
    distPath: {
      root: "dist",
      html: "html",
      js: "static/js",
      css: "static/css",
      server: "bundles",
      worker: "worker"
    },
    cleanDistPath: true,
    disableNodePolyfill: true,
    enableInlineRouteManifests: true,
    disableInlineRouteManifests: false
  };
  var _obj;
  var source = {
    entries: void 0,
    mainEntryName: MAIN_ENTRY_NAME,
    enableAsyncEntry: false,
    enableCustomEntry: false,
    disableDefaultEntries: false,
    entriesDir: "./src",
    configDir: "./config",
    globalVars: getAutoInjectEnv(appContext),
    alias: (_obj = {}, _define_property(_obj, appContext.internalDirAlias, appContext.internalDirectory), _define_property(_obj, appContext.internalSrcAlias, appContext.srcDirectory), _define_property(_obj, "@", appContext.srcDirectory), _define_property(_obj, "@shared", appContext.sharedDirectory), _obj)
  };
  var html = {
    title: "",
    mountId: "root",
    meta: {
      charset: {
        charset: "utf-8"
      },
      viewport: "width=device-width, initial-scale=1.0, shrink-to-fit=no, viewport-fit=cover, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no",
      "http-equiv": {
        "http-equiv": "x-ua-compatible",
        content: "ie=edge"
      },
      renderer: "webkit",
      layoutmode: "standard",
      imagemode: "force",
      "wap-font-scale": "no",
      "format-detection": "telephone=no"
    }
  };
  var server = {
    routes: void 0,
    publicRoutes: void 0,
    ssr: void 0,
    ssrByEntries: void 0,
    baseUrl: "/",
    port: 8080
  };
  return {
    source,
    output,
    server,
    dev,
    html,
    tools: {
      tsChecker: {
        issue: {
          exclude: [
            {
              file: "**/api/lambda/**/*"
            }
          ]
        }
      }
    },
    plugins: [],
    builderPlugins: [],
    runtime: {},
    runtimeByEntries: {}
  };
}
function createLegacyDefaultConfig(appContext) {
  var _obj;
  var defaultAlias = appContext ? (_obj = {}, _define_property(_obj, appContext.internalDirAlias, appContext.internalDirectory), _define_property(_obj, appContext.internalSrcAlias, appContext.srcDirectory), _define_property(_obj, "@", appContext.srcDirectory), _define_property(_obj, "@shared", appContext.sharedDirectory), _obj) : {};
  var sourceDefaults = {
    entries: void 0,
    mainEntryName: MAIN_ENTRY_NAME,
    enableAsyncEntry: false,
    enableCustomEntry: false,
    disableDefaultEntries: false,
    entriesDir: "./src",
    configDir: "./config",
    apiDir: "./api",
    envVars: [],
    globalVars: getAutoInjectEnv(appContext),
    alias: defaultAlias,
    moduleScopes: void 0,
    include: []
  };
  var outputDefaults = {
    assetPrefix: "/",
    htmlPath: "html",
    jsPath: "static/js",
    cssPath: "static/css",
    mediaPath: "static/media",
    path: "dist",
    title: "",
    titleByEntries: void 0,
    meta: {
      charset: {
        charset: "utf-8"
      },
      viewport: "width=device-width, initial-scale=1.0, shrink-to-fit=no, viewport-fit=cover, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no",
      "http-equiv": {
        "http-equiv": "x-ua-compatible",
        content: "ie=edge"
      },
      renderer: "webkit",
      layoutmode: "standard",
      imagemode: "force",
      "wap-font-scale": "no",
      "format-detection": "telephone=no"
    },
    metaByEntries: void 0,
    inject: "head",
    injectByEntries: void 0,
    mountId: "root",
    favicon: "",
    faviconByEntries: void 0,
    copy: void 0,
    disableHtmlFolder: false,
    disableCssModuleExtension: false,
    disableCssExtract: false,
    enableCssModuleTSDeclaration: false,
    disableMinimize: false,
    enableInlineStyles: false,
    enableInlineScripts: false,
    disableSourceMap: false,
    disableInlineRuntimeChunk: false,
    disableAssetsCache: false,
    enableLatestDecorators: false,
    polyfill: "entry",
    dataUriLimit: 1e4,
    templateParameters: {},
    templateParametersByEntries: void 0,
    cssModuleLocalIdentName: void 0,
    disableNodePolyfill: false,
    enableTsLoader: false
  };
  var serverDefaults = {
    routes: void 0,
    publicRoutes: void 0,
    ssr: void 0,
    ssrByEntries: void 0,
    baseUrl: "/",
    port: 8080
  };
  var devDefaults = {
    assetPrefix: false,
    https: false
  };
  var toolsDefaults = {
    webpack: void 0,
    babel: void 0,
    postcss: void 0,
    autoprefixer: void 0,
    lodash: void 0,
    devServer: void 0,
    tsLoader: void 0,
    terser: void 0,
    minifyCss: void 0
  };
  return {
    source: sourceDefaults,
    output: outputDefaults,
    server: serverDefaults,
    dev: devDefaults,
    tools: toolsDefaults,
    runtime: {},
    runtimeByEntries: {}
  };
}
export {
  createDefaultConfig,
  createLegacyDefaultConfig
};
