"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var utils_exports = {};
__export(utils_exports, {
  generateAsyncEntryCode: () => generateAsyncEntryCode,
  getRuntimeConfig: () => getRuntimeConfig,
  setRuntimeConfig: () => setRuntimeConfig
});
module.exports = __toCommonJS(utils_exports);
function getRuntimeConfig(config) {
  var _config_runtime;
  if (config === null || config === void 0 ? void 0 : (_config_runtime = config.runtime) === null || _config_runtime === void 0 ? void 0 : _config_runtime.features) {
    var _config_runtime1;
    return config === null || config === void 0 ? void 0 : (_config_runtime1 = config.runtime) === null || _config_runtime1 === void 0 ? void 0 : _config_runtime1.features;
  }
  return (config === null || config === void 0 ? void 0 : config.runtime) || {};
}
function setRuntimeConfig(config, key, value) {
  var _config_runtime_features, _config_runtime, _config_runtime1;
  if (config === null || config === void 0 ? void 0 : (_config_runtime = config.runtime) === null || _config_runtime === void 0 ? void 0 : (_config_runtime_features = _config_runtime.features) === null || _config_runtime_features === void 0 ? void 0 : _config_runtime_features[key]) {
    config.runtime.features[key] = value;
    return void 0;
  }
  if (config === null || config === void 0 ? void 0 : (_config_runtime1 = config.runtime) === null || _config_runtime1 === void 0 ? void 0 : _config_runtime1[key]) {
    config.runtime[key] = value;
    return void 0;
  }
  return void 0;
}
const generateAsyncEntryCode = (appendCode = []) => {
  return `
      export const provider = async (...args) => {
        const exports = await import('./index.jsx');
        return exports.provider.apply(null, args);
      };
      if (!window.__GARFISH__) { import('./index.jsx'); }
      if (typeof __GARFISH_EXPORTS__ !== 'undefined') {
        __GARFISH_EXPORTS__.provider = provider;
      }

      ${appendCode.join("\n")}
    `;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  generateAsyncEntryCode,
  getRuntimeConfig,
  setRuntimeConfig
});
