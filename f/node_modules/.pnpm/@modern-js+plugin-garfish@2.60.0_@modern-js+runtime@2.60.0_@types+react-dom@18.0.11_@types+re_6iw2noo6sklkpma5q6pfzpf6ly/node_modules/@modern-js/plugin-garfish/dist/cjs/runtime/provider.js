"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var provider_exports = {};
__export(provider_exports, {
  createProvider: () => createProvider
});
module.exports = __toCommonJS(provider_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_browser = require("@meta/runtime/browser");
var import_react = require("@meta/runtime/react");
var import_react_dom = require("react-dom");
function createProvider(id, { customBootstrap, beforeRender } = {}) {
  return ({ basename, dom }) => {
    let root = null;
    return {
      async render({ basename: basename2, dom: dom2, props }) {
        const ModernRoot = (0, import_react.createRoot)(null);
        if (customBootstrap) {
          root = await customBootstrap(ModernRoot, () => (0, import_browser.render)(/* @__PURE__ */ (0, import_jsx_runtime.jsx)(ModernRoot, {
            basename: basename2,
            ...props
          }), dom2));
        } else {
          if (beforeRender) {
            await beforeRender(ModernRoot, {
              basename: basename2,
              ...props
            });
          }
          root = await (0, import_browser.render)(/* @__PURE__ */ (0, import_jsx_runtime.jsx)(ModernRoot, {
            basename: basename2,
            ...props
          }), dom2);
        }
      },
      destroy({ dom: dom2 }) {
        const node = dom2.querySelector(`#${id || "root"}`) || dom2;
        if (node) {
          if (process.env.IS_REACT18 === "true") {
            root.unmount();
          } else {
            (0, import_react_dom.unmountComponentAtNode)(node);
          }
        }
      },
      // 兼容旧版本
      SubModuleComponent: (props) => {
        const ModernRoot = (0, import_react.createRoot)(null);
        return /* @__PURE__ */ (0, import_react_dom.createPortal)(/* @__PURE__ */ (0, import_jsx_runtime.jsx)(ModernRoot, {
          basename,
          ...props
        }), dom.querySelector(`#${id || "root"}`) || dom);
      },
      jupiter_submodule_app_key: (props) => {
        const ModernRoot = (0, import_react.createRoot)(null);
        return /* @__PURE__ */ (0, import_react_dom.createPortal)(/* @__PURE__ */ (0, import_jsx_runtime.jsx)(ModernRoot, {
          basename,
          ...props
        }), dom.querySelector(`#${id || "root"}`) || dom);
      }
    };
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createProvider
});
