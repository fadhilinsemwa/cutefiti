import path from "path";
import { fs } from "@modern-js/utils";
import * as template from "./template";
import { generateAsyncEntryCode } from "./utils";
const ENTRY_POINT_FILE_NAME = "index.jsx";
const ENTRY_BOOTSTRAP_FILE_NAME = "bootstrap.jsx";
const generateCode = async (entrypoints, appContext, config, appendEntryCode) => {
  const { mountId } = config.html;
  const { enableAsyncEntry } = config.source;
  const { internalDirectory, internalSrcAlias, metaName, srcDirectory } = appContext;
  await Promise.all(entrypoints.map(async (entrypoint) => {
    const { entryName, isAutoMount, entry, customEntry, customBootstrap } = entrypoint;
    const appendCode = await appendEntryCode({
      entrypoint
    });
    if (isAutoMount) {
      const indexCode = template.index({
        srcDirectory,
        internalSrcAlias,
        metaName,
        entry,
        entryName,
        customEntry,
        customBootstrap,
        mountId,
        appendCode
      });
      const indexFile = path.resolve(internalDirectory, `./${entryName}/${ENTRY_POINT_FILE_NAME}`);
      fs.outputFileSync(indexFile, indexCode, "utf8");
      if (enableAsyncEntry) {
        const bootstrapFile = path.resolve(internalDirectory, `./${entryName}/${ENTRY_BOOTSTRAP_FILE_NAME}`);
        fs.outputFileSync(bootstrapFile, generateAsyncEntryCode(appendCode), "utf8");
      }
    }
  }));
};
export {
  ENTRY_BOOTSTRAP_FILE_NAME,
  generateCode
};
