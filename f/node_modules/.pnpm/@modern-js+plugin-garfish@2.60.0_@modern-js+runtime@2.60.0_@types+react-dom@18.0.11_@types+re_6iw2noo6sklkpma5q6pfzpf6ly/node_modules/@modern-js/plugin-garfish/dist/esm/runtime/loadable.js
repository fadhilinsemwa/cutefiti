import { _ as _object_spread } from "@swc/helpers/_/_object_spread";
import { _ as _object_spread_props } from "@swc/helpers/_/_object_spread_props";
import { _ as _object_without_properties } from "@swc/helpers/_/_object_without_properties";
import { _ as _sliced_to_array } from "@swc/helpers/_/_sliced_to_array";
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useCallback, useEffect, useState } from "react";
import { logger } from "../util";
var DEFAULT_LOADABLE = {
  delay: 200,
  timeout: 1e4,
  loading: null
};
function Loadable(WrapComponent) {
  return function(defaultLoadable) {
    return function Lodable(props) {
      var _props_loadable;
      var _props_loadable1 = props.loadable, loadable = _props_loadable1 === void 0 ? defaultLoadable !== null && defaultLoadable !== void 0 ? defaultLoadable : DEFAULT_LOADABLE : _props_loadable1, otherProps = _object_without_properties(props, [
        "loadable"
      ]);
      var delayTimer = null;
      var timeoutTimer = null;
      var _useState = _sliced_to_array(useState(function() {
        var delay = loadable.delay, timeout = loadable.timeout;
        var initState = {
          error: null,
          pastDelay: false,
          timedOut: false,
          isLoading: false
        };
        if (typeof delay === "number") {
          if (delay === 0) {
            initState.pastDelay = true;
          } else {
            delayTimer = setTimeout(function() {
              setStateWithMountCheck({
                pastDelay: true
              });
            }, delay);
          }
        }
        if (typeof timeout === "number") {
          timeoutTimer = setTimeout(function() {
            setStateWithMountCheck({
              timedOut: true
            });
          }, timeout);
        }
        return initState;
      }), 2), state = _useState[0], setState = _useState[1];
      var LoadingComponent = (_props_loadable = props.loadable) === null || _props_loadable === void 0 ? void 0 : _props_loadable.loading;
      useEffect(function() {
        logger("Loadable render state", {
          state,
          props: otherProps,
          loadable,
          defaultLoadable
        });
        return function() {
          setStateWithMountCheck({
            isLoading: false,
            error: null
          });
          if (delayTimer) {
            clearTimeout(delayTimer);
            delayTimer = null;
          }
          if (timeoutTimer) {
            clearTimeout(timeoutTimer);
            timeoutTimer = null;
          }
        };
      }, []);
      var retry = useCallback(function() {
        setState(_object_spread_props(_object_spread({}, state), {
          error: null,
          isLoading: true,
          timedOut: false
        }));
      }, [
        state
      ]);
      var setStateWithMountCheck = useCallback(function(newState) {
        setState(function(state2) {
          return _object_spread({}, state2, newState);
        });
      }, [
        state
      ]);
      var showLoading = (state.isLoading || state.error) && LoadingComponent;
      return /* @__PURE__ */ _jsxs(_Fragment, {
        children: [
          showLoading && /* @__PURE__ */ _jsx(LoadingComponent, {
            isLoading: state.isLoading,
            pastDelay: state.pastDelay,
            timedOut: state.timedOut,
            error: state === null || state === void 0 ? void 0 : state.error,
            retry
          }),
          /* @__PURE__ */ _jsx(WrapComponent, _object_spread({
            style: {
              display: showLoading ? "none" : "block"
            },
            setLoadingState: function(props2) {
              if (props2.error && !LoadingComponent) {
                throw props2.error;
              }
              setStateWithMountCheck(props2);
            }
          }, otherProps))
        ]
      });
    };
  };
}
export {
  Loadable
};
