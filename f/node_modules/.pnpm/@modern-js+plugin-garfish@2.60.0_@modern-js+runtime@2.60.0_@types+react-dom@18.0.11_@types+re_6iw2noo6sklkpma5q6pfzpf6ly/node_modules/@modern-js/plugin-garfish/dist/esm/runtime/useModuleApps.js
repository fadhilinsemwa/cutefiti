import { _ as _object_spread } from "@swc/helpers/_/_object_spread";
import React, { useContext } from "react";
import { logger } from "../util";
import { GarfishContext } from "./utils/Context";
function useModuleApps() {
  var _useContext = useContext(GarfishContext), apps = _useContext.apps, MApp = _useContext.MApp, appInfoList = _useContext.appInfoList;
  logger("call useModuleApps", _object_spread({
    MApp,
    apps: appInfoList
  }, apps));
  var Info = new Proxy(_object_spread({
    MApp,
    apps: appInfoList
  }, apps), {
    get: function get(target, p, receiver) {
      if (typeof p === "string" && p in target) {
        return Reflect.get(target, p, receiver);
      }
      return function() {
        return React.createElement("div");
      };
    }
  });
  return Info;
}
function useModuleApp() {
  var MApp = useContext(GarfishContext).MApp;
  logger("call useModuleApps", MApp);
  return MApp;
}
export {
  useModuleApp,
  useModuleApps
};
