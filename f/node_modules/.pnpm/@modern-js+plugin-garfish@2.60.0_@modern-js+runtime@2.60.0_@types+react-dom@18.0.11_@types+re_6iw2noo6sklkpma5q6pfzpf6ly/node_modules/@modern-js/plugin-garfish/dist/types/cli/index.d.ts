import type { AppTools, CliPlugin } from '@modern-js/app-tools';
import type { CliHookCallbacks, useConfigContext } from '@modern-js/core';
import { type AsyncWorkflow } from '@modern-js/plugin';
import type { Entrypoint } from '@modern-js/types';
export type UseConfig = ReturnType<typeof useConfigContext>;
export declare const externals: {
    'react-dom': string;
    react: string;
};
export type LifeCycle = CliHookCallbacks;
type NonInValidAble<T> = T extends null | undefined | false ? never : T;
export declare function getDefaultMicroFrontedConfig(microFrontend: NonInValidAble<NonNullable<UseConfig['deploy']>['microFrontend']>): any;
declare const appendEntryCode: AsyncWorkflow<{
    entrypoint: Entrypoint;
}, string>;
export declare const garfishPlugin: () => CliPlugin<AppTools & {
    hooks: {
        appendEntryCode: AsyncWorkflow<{
            entrypoint: Entrypoint;
        }, string>;
    };
}>;
export default garfishPlugin;
