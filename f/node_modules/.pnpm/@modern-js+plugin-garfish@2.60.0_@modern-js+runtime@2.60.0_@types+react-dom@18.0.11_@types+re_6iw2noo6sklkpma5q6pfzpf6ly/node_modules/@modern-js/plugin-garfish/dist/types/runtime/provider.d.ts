/// <reference types="react" />
/// <reference types="src/global" />
import { type RenderFunc } from '@meta/runtime/browser';
import type { Root } from 'react-dom/client';
export declare function createProvider(id?: string, { customBootstrap, beforeRender, }?: {
    customBootstrap?: (App: React.ComponentType, render: RenderFunc) => Promise<HTMLElement | Root>;
    beforeRender?: (App: React.ComponentType, props?: Record<string, any>) => Promise<any>;
}): ({ basename, dom }: {
    basename: string;
    dom: HTMLElement;
}) => {
    render({ basename, dom, props, }: {
        basename: string;
        dom: HTMLElement;
        props: any;
        appName?: string | undefined;
    }): Promise<void>;
    destroy({ dom }: {
        dom: HTMLElement;
    }): void;
    SubModuleComponent: (props: any) => import("react").ReactPortal;
    jupiter_submodule_app_key: (props: any) => import("react").ReactPortal;
};
