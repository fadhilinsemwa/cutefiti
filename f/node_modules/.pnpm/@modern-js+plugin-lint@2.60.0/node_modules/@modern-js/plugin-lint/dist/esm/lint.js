import { _ as _to_consumable_array } from "@swc/helpers/_/_to_consumable_array";
import { join } from "path";
import { chalk, logger, minimist } from "@modern-js/utils";
import spawn from "cross-spawn";
var ensureOption = function(args, name, val) {
  if (!args.hasOwnProperty(name) || args[name].length < 1) {
    if (Array.isArray(val)) {
      return [
        "--".concat(name),
        val.join(",")
      ];
    }
    if (typeof val === "boolean") {
      return val ? [
        "--".concat(name)
      ] : [
        "--no-".concat(name)
      ];
    } else {
      return [
        "--".concat(name),
        val
      ];
    }
  }
  return [];
};
function lint_default() {
  var _rawArgs, _rawArgs1;
  var _args__;
  var rawArgs = process.argv.slice(3);
  var args = minimist(rawArgs);
  var exts = [
    ".js",
    ".jsx",
    ".ts",
    ".tsx",
    ".mjs",
    ".mjsx",
    ".cjs",
    ".cjsx"
  ];
  (_rawArgs = rawArgs).push.apply(_rawArgs, _to_consumable_array(ensureOption(args, "ext", exts)));
  (_rawArgs1 = rawArgs).push.apply(_rawArgs1, _to_consumable_array(ensureOption(args, "fix", true)));
  [
    "node_modules/",
    "dist/",
    "output/",
    "output_resource/"
  ].forEach(function(pattern) {
    var _rawArgs3;
    (_rawArgs3 = rawArgs).push.apply(_rawArgs3, _to_consumable_array(ensureOption(args, "ignore-pattern", pattern)));
  });
  if (args === null || args === void 0 ? void 0 : (_args__ = args._) === null || _args__ === void 0 ? void 0 : _args__.length) {
    var _rawArgs2;
    (_rawArgs2 = rawArgs).push.apply(_rawArgs2, _to_consumable_array(args._));
  } else {
    rawArgs.push("./");
  }
  var eslintScript = join(require.resolve("eslint/package.json"), "../bin/eslint.js");
  logger.info(chalk.bold("Lint..."));
  logger.info(chalk.bold('NODE_OPTIONS="--max-old-space-size=8192" '.concat(eslintScript, " ").concat(rawArgs.join(" "))));
  var childprocess = spawn(eslintScript, rawArgs, {
    stdio: "inherit"
  });
  childprocess.on("exit", function(code) {
    return process.exit(code || 0);
  });
}
;
export {
  lint_default as default
};
