"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var cli_exports = {};
__export(cli_exports, {
  designTokenPlugin: () => designTokenPlugin
});
module.exports = __toCommonJS(cli_exports);
var import_utils = require("@modern-js/utils");
const designTokenPlugin = ({ pluginName } = {
  pluginName: "@modern-js/plugin-tailwindcss"
}) => ({
  name: "@modern-js/plugin-design-token",
  setup(api) {
    const resolveConfig = (0, import_utils.lazyImport)("tailwindcss/resolveConfig", require);
    const PLUGIN_IDENTIFIER = "designToken";
    const getDesignTokens = (designSystem) => {
      const tailwindcssConfig = {};
      tailwindcssConfig.theme = designSystem ? {
        ...designSystem
      } : {};
      if (!designSystem) {
        tailwindcssConfig.presets = [];
      }
      if (designSystem) {
        delete tailwindcssConfig.theme.supportStyledComponents;
      }
      return resolveConfig(tailwindcssConfig).theme || {};
    };
    return {
      _internalRuntimePlugins({ entrypoint, plugins }) {
        var _userConfig_source;
        const userConfig = api.useResolvedConfigContext();
        var _userConfig_source_designSystem;
        const designSystem = (_userConfig_source_designSystem = (_userConfig_source = userConfig.source) === null || _userConfig_source === void 0 ? void 0 : _userConfig_source.designSystem) !== null && _userConfig_source_designSystem !== void 0 ? _userConfig_source_designSystem : {};
        let useSCThemeProvider = true;
        if (designSystem) {
          useSCThemeProvider = (designSystem === null || designSystem === void 0 ? void 0 : designSystem.supportStyledComponents) || false;
        }
        if (typeof designSystem === "object" && designSystem.supportStyledComponents) {
          const designTokens = getDesignTokens(userConfig.source.designSystem);
          plugins.push({
            name: PLUGIN_IDENTIFIER,
            path: `${pluginName}/runtime-design-token`,
            config: {
              token: designTokens,
              useStyledComponentsThemeProvider: Boolean(useSCThemeProvider),
              useDesignTokenContext: false
            }
          });
        }
        return {
          entrypoint,
          plugins
        };
      },
      addRuntimeExports() {
        const appContext = api.useAppContext();
        const pluginsExportsUtils = (0, import_utils.createRuntimeExportsUtils)(appContext.internalDirectory, "plugins");
        pluginsExportsUtils.addExport(`export { default as designToken } from '${pluginName}/runtime-design-token'`);
      }
    };
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  designTokenPlugin
});
