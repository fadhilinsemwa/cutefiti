"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var plugin_exports = {};
__export(plugin_exports, {
  DesignTokenContext: () => DesignTokenContext,
  default: () => plugin_default,
  designTokenPlugin: () => designTokenPlugin,
  useDesignTokens: () => useDesignTokens
});
module.exports = __toCommonJS(plugin_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_merge = require("@modern-js/runtime-utils/merge");
var import_react = __toESM(require("react"));
const DesignTokenContext = /* @__PURE__ */ import_react.default.createContext({});
const useDesignTokens = () => (0, import_react.useContext)(DesignTokenContext);
const designTokenPlugin = (userConfig = {}) => ({
  name: "@modern-js/plugin-design-token",
  setup: (api) => ({
    wrapRoot(App) {
      const pluginConfig = api.useRuntimeConfigContext();
      const { options } = (0, import_merge.merge)(pluginConfig.designToken || {}, userConfig);
      const DesignTokenAppWrapper = (props) => {
        const { token = {}, useStyledComponentsThemeProvider = false, useDesignTokenContext = false } = options;
        if (useStyledComponentsThemeProvider && useDesignTokenContext) {
          const { ThemeProvider } = require("@modern-js/runtime/styled");
          return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ThemeProvider, {
            theme: token,
            children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(DesignTokenContext.Provider, {
              value: token,
              children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(App, {
                ...props
              })
            })
          });
        } else if (useStyledComponentsThemeProvider) {
          const { ThemeProvider } = require("@modern-js/runtime/styled");
          return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(ThemeProvider, {
            theme: token,
            children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(App, {
              ...props
            })
          });
        } else if (useDesignTokenContext) {
          return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(DesignTokenContext.Provider, {
            value: token,
            children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(App, {
              ...props
            })
          });
        } else {
          return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(App, {
            ...props
          });
        }
      };
      return DesignTokenAppWrapper;
    }
  })
});
var plugin_default = designTokenPlugin;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  DesignTokenContext,
  designTokenPlugin,
  useDesignTokens
});
