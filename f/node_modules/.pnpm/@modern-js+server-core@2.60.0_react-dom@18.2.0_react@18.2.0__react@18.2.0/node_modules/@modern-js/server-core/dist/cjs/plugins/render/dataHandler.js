"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var dataHandler_exports = {};
__export(dataHandler_exports, {
  dataHandler: () => dataHandler
});
module.exports = __toCommonJS(dataHandler_exports);
var import_constants = require("@modern-js/utils/universal/constants");
const dataHandler = async (request, { routeInfo, serverRoutes, reporter, onError, onTiming, serverManifest }) => {
  var _serverManifest_loaderBundles;
  const serverLoaderModule = serverManifest === null || serverManifest === void 0 ? void 0 : (_serverManifest_loaderBundles = serverManifest.loaderBundles) === null || _serverManifest_loaderBundles === void 0 ? void 0 : _serverManifest_loaderBundles[routeInfo.entryName || import_constants.MAIN_ENTRY_NAME];
  if (!serverLoaderModule) {
    return;
  }
  const { routes, handleRequest } = serverLoaderModule;
  const response = await handleRequest({
    request,
    serverRoutes,
    context: {
      reporter
    },
    onTiming,
    onError,
    routes
  });
  return response;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  dataHandler
});
