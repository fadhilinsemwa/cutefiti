import { lodash } from "../compiled";
const { cloneDeep } = lodash;
function filterRoutesForServer(routes) {
  const clonedRoutes = cloneDeep(routes);
  const newRoutes = clonedRoutes.map((route) => {
    if (route.type !== "nested") {
      return route;
    }
    if (route.children && route.children.length > 0) {
      route.children = filterRoutesForServer(route.children);
    }
    if (route.inValidSSRRoute) {
      return null;
    }
    return route;
  }).filter((route) => route !== null);
  return newRoutes;
}
function filterRoutesLoader(routes) {
  const clonedRoutes = cloneDeep(routes);
  const newRoutes = clonedRoutes.map((route) => {
    if (route.type !== "nested") {
      return route;
    }
    if (route.children && route.children.length > 0) {
      route.children = filterRoutesLoader(route.children);
    }
    if (route.inValidSSRRoute) {
      delete route.loader;
      delete route.data;
      delete route.action;
    }
    return route;
  }).filter((route) => route !== null);
  return newRoutes;
}
export {
  filterRoutesForServer,
  filterRoutesLoader
};
