import { __internalHelper } from '@rsbuild/core';
declare const getChainUtils: typeof __internalHelper.getChainUtils, initRsbuildConfig: typeof __internalHelper.initRsbuildConfig, createDevServer: typeof __internalHelper.createDevServer, formatStats: typeof __internalHelper.formatStats, getStatsOptions: typeof __internalHelper.getStatsOptions, stringifyConfig: typeof __internalHelper.stringifyConfig, outputInspectConfigFiles: typeof __internalHelper.outputInspectConfigFiles, getRsbuildInspectConfig: ({ normalizedConfig, inspectOptions, pluginManager, }: {
    normalizedConfig: import("@rsbuild/core").NormalizedConfig;
    inspectOptions: import("@rsbuild/core").InspectConfigOptions;
    pluginManager: import("@rsbuild/core").PluginManager;
}) => {
    rawRsbuildConfig: string;
    rsbuildConfig: import("@rsbuild/core").InspectConfigResult["origin"]["rsbuildConfig"];
    rawEnvironmentConfigs: Array<{
        name: string;
        content: string;
    }>;
    environmentConfigs: import("@rsbuild/core").InspectConfigResult["origin"]["environmentConfigs"];
}, chainToConfig: typeof __internalHelper.chainToConfig, modifyBundlerChain: typeof __internalHelper.modifyBundlerChain, registerDevHook: ({ context, compiler, bundlerConfigs, MultiStatsCtor, }: {
    bundlerConfigs?: import("@rspack/core").Configuration[];
    context: __internalHelper.InternalContext;
    compiler: import("@rspack/core").Compiler | import("@rspack/core").MultiCompiler;
    MultiStatsCtor: new (stats: import("@rspack/core").Stats[]) => import("@rspack/core").MultiStats;
}) => void, registerBuildHook: ({ context, isWatch, compiler, bundlerConfigs, MultiStatsCtor, }: {
    bundlerConfigs?: import("@rspack/core").Configuration[];
    context: __internalHelper.InternalContext;
    compiler: import("@rspack/core").Compiler | import("@rspack/core").MultiCompiler;
    isWatch: boolean;
    MultiStatsCtor: new (stats: import("@rspack/core").Stats[]) => import("@rspack/core").MultiStats;
}) => void, prettyTime: (seconds: number) => string;
export { getChainUtils, initRsbuildConfig, createDevServer, formatStats, getStatsOptions, stringifyConfig, outputInspectConfigFiles, chainToConfig, modifyBundlerChain, registerDevHook, registerBuildHook, prettyTime, getRsbuildInspectConfig, };
export type InternalContext = __internalHelper.InternalContext;
export declare const castArray: <T>(arr?: T | T[]) => T[];
